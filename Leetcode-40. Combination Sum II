Question-

Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.

Each number in candidates may only be used once in the combination.

Note: The solution set must not contain duplicate combinations.

 

Example 1:

Input: candidates = [10,1,2,7,6,1,5], target = 8
Output: 
[
[1,1,6],
[1,2,5],
[1,7],
[2,6]
]
Example 2:

Input: candidates = [2,5,2,1,2], target = 5
Output: 
[
[1,2,2],
[5]
]


Solution-------------------------------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> al = new ArrayList<>();
        Arrays.sort(candidates);
        helper(al,candidates,target,0,new ArrayList<>());
        return al;
    }
    
    public void helper(List<List<Integer>> al,int[] nums,int tgt,int idx,ArrayList<Integer> li){
        
        if(tgt == 0){
            al.add(new ArrayList<>(li));
            return;
        }
        
        for(int i = idx ;i <nums.length;i++){
            if(i>idx && nums[i] == nums[i-1]) continue;
            if(nums[i]>tgt)break;
            li.add(nums[i]);
            helper(al,nums,tgt-nums[i],i+1,li);
            li.remove(li.size()-1);
        }
    }
}
